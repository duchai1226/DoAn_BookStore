<?php
session_start();
require_once __DIR__ . '/../../model/Database.php';
require_once __DIR__ . '/../../vendor/autoload.php'; // N·∫øu s·ª≠ d·ª•ng PHPMailer qua Composer

use PHPMailer\PHPMailer\PHPMailer;
use PHPMailer\PHPMailer\SMTP;
use PHPMailer\PHPMailer\Exception;

$database = new Database();
$message = '';
$messageType = '';
$step = isset($_GET['step']) ? $_GET['step'] : 1;

// Load environment variables
function loadEnv()
{
    $envFile = __DIR__ . '/../../.env';
    if (file_exists($envFile)) {
        $lines = file($envFile, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);
        foreach ($lines as $line) {
            if (strpos($line, '=') !== false && strpos($line, '#') !== 0) {
                list($key, $value) = explode('=', $line, 2);
                $_ENV[trim($key)] = trim($value);
            }
        }
    }
}

// Send email using SMTP
function sendOTPEmail($toEmail, $otp, $isResend = false)
{
    loadEnv();

    $mail = new PHPMailer(true);

    try {
        // Server settings
        $mail->isSMTP();
        $mail->Host = $_ENV['MAIL_HOST'] ?? 'smtp.gmail.com';
        $mail->SMTPAuth = true;
        $mail->Username = $_ENV['MAIL_USERNAME'] ?? '';
        $mail->Password = $_ENV['MAIL_PASSWORD'] ?? '';
        $mail->SMTPSecure = $_ENV['MAIL_ENCRYPTION'] ?? PHPMailer::ENCRYPTION_STARTTLS;
        $mail->Port = $_ENV['MAIL_PORT'] ?? 587;
        $mail->CharSet = 'UTF-8';

        // Recipients
        $mail->setFrom(
            $_ENV['MAIL_FROM_ADDRESS'] ?? 'bookstore.sp1@gmail.com',
            $_ENV['MAIL_FROM_NAME'] ?? 'BookStore'
        );
        $mail->addAddress($toEmail);
        $mail->addReplyTo(
            $_ENV['MAIL_FROM_ADDRESS'] ?? 'bookstore.sp1@gmail.com',
            $_ENV['MAIL_FROM_NAME'] ?? 'BookStore'
        );

        // Content
        $mail->isHTML(true);
        $mail->Subject = $isResend ? 'M√£ OTP m·ªõi - ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u BookStore' : 'M√£ OTP ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u - BookStore';

        $mail->Body = "
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset='UTF-8'>
            <style>
                body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
                .container { max-width: 600px; margin: 0 auto; padding: 20px; }
                .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; text-align: center; border-radius: 10px 10px 0 0; }
                .content { background: #f8f9fa; padding: 30px; border-radius: 0 0 10px 10px; }
                .otp-box { background: white; border: 2px dashed #007bff; padding: 20px; margin: 20px 0; text-align: center; border-radius: 10px; }
                .otp-code { font-size: 32px; font-weight: bold; color: #007bff; letter-spacing: 5px; margin: 10px 0; }
                .warning { background: #fff3cd; border: 1px solid #ffeaa7; padding: 15px; border-radius: 5px; margin: 20px 0; }
                .footer { text-align: center; margin-top: 30px; padding-top: 20px; border-top: 1px solid #ddd; color: #666; }
            </style>
        </head>
        <body>
            <div class='container'>
                <div class='header'>
                    <h1>üìö BookStore</h1>
                    <h2>" . ($isResend ? 'M√£ OTP M·ªõi' : 'ƒê·∫∑t L·∫°i M·∫≠t Kh·∫©u') . "</h2>
                </div>
                
                <div class='content'>
                    <p>Xin ch√†o,</p>
                    
                    <p>B·∫°n ƒë√£ y√™u c·∫ßu " . ($isResend ? 'g·ª≠i l·∫°i m√£ OTP' : 'ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u') . " cho t√†i kho·∫£n BookStore c·ªßa m√¨nh.</p>
                    
                    <div class='otp-box'>
                        <p><strong>M√£ OTP c·ªßa b·∫°n l√†:</strong></p>
                        <div class='otp-code'>{$otp}</div>
                        <p><small>Vui l√≤ng nh·∫≠p m√£ n√†y ƒë·ªÉ ti·∫øp t·ª•c</small></p>
                    </div>
                    
                    <div class='warning'>
                        <p><strong>‚ö†Ô∏è L∆∞u √Ω quan tr·ªçng:</strong></p>
                        <ul>
                            <li>M√£ OTP n√†y ch·ªâ c√≥ hi·ªáu l·ª±c trong <strong>5 ph√∫t</strong></li>
                            <li>Kh√¥ng chia s·∫ª m√£ n√†y v·ªõi b·∫•t k·ª≥ ai</li>
                            <li>N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng b·ªè qua email n√†y</li>
                        </ul>
                    </div>
                    
                    <p>N·∫øu b·∫°n g·∫∑p kh√≥ khƒÉn, vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i qua email n√†y ho·∫∑c hotline: <strong>1900-123-456</strong></p>
                </div>
                
                <div class='footer'>
                    <p>Tr√¢n tr·ªçng,<br><strong>ƒê·ªôi ng≈© BookStore</strong></p>
                    <p><small>Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi.</small></p>
                </div>
            </div>
        </body>
        </html>";

        $mail->AltBody = "M√£ OTP ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u BookStore: {$otp}. M√£ n√†y c√≥ hi·ªáu l·ª±c trong 5 ph√∫t.";

        $mail->send();
        return true;

    } catch (Exception $e) {
        error_log("Email sending failed: {$mail->ErrorInfo}");
        return false;
    }
}

// X·ª≠ l√Ω form submission
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    if (isset($_POST['send_otp'])) {
        // B∆∞·ªõc 1: G·ª≠i OTP
        $email = trim($_POST['email']);

        if (empty($email)) {
            $message = 'Vui l√≤ng nh·∫≠p ƒë·ªãa ch·ªâ email';
            $messageType = 'danger';
        } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $message = 'ƒê·ªãa ch·ªâ email kh√¥ng h·ª£p l·ªá';
            $messageType = 'danger';
        } else {
            // Ki·ªÉm tra email c√≥ t·ªìn t·∫°i trong h·ªá th·ªëng kh√¥ng
            $user = $database->getUserByUsernameOrEmail($email);

            if ($user && $user->email === $email) {
                // T·∫°o OTP 5 s·ªë
                $otp = sprintf('%05d', mt_rand(0, 99999));

                // L∆∞u OTP v√†o session v·ªõi th·ªùi gian h·∫øt h·∫°n
                $_SESSION['reset_otp'] = $otp;
                $_SESSION['reset_email'] = $email;
                $_SESSION['reset_user_id'] = $user->user_id;
                $_SESSION['otp_expires'] = time() + 300; // 5 ph√∫t

                // G·ª≠i email OTP qua SMTP
                if (sendOTPEmail($email, $otp)) {
                    $message = 'M√£ OTP ƒë√£ ƒë∆∞·ª£c g·ª≠i ƒë·∫øn email c·ªßa b·∫°n. Vui l√≤ng ki·ªÉm tra h·ªôp th∆∞ (k·ªÉ c·∫£ th∆∞ r√°c).';
                    $messageType = 'success';
                    $step = 2;
                } else {
                    $message = 'Kh√¥ng th·ªÉ g·ª≠i email. Vui l√≤ng ki·ªÉm tra ƒë·ªãa ch·ªâ email v√† th·ª≠ l·∫°i sau.';
                    $messageType = 'danger';
                }
            } else {
                $message = 'Email kh√¥ng t·ªìn t·∫°i trong h·ªá th·ªëng';
                $messageType = 'danger';
            }
        }
    } elseif (isset($_POST['verify_otp'])) {
        // B∆∞·ªõc 2: X√°c th·ª±c OTP
        $inputOtp = trim($_POST['otp']);

        if (empty($inputOtp)) {
            $message = 'Vui l√≤ng nh·∫≠p m√£ OTP';
            $messageType = 'danger';
            $step = 2;
        } elseif (!isset($_SESSION['reset_otp']) || !isset($_SESSION['otp_expires'])) {
            $message = 'Phi√™n l√†m vi·ªác ƒë√£ h·∫øt h·∫°n. Vui l√≤ng th·ª≠ l·∫°i.';
            $messageType = 'danger';
            $step = 1;
        } elseif (time() > $_SESSION['otp_expires']) {
            $message = 'M√£ OTP ƒë√£ h·∫øt h·∫°n. Vui l√≤ng y√™u c·∫ßu m√£ m·ªõi.';
            $messageType = 'danger';
            unset($_SESSION['reset_otp'], $_SESSION['otp_expires']);
            $step = 1;
        } elseif ($inputOtp !== $_SESSION['reset_otp']) {
            $message = 'M√£ OTP kh√¥ng ch√≠nh x√°c';
            $messageType = 'danger';
            $step = 2;
        } else {
            $message = 'M√£ OTP ch√≠nh x√°c. Vui l√≤ng ƒë·∫∑t m·∫≠t kh·∫©u m·ªõi.';
            $messageType = 'success';
            $step = 3;
        }
    } elseif (isset($_POST['reset_password'])) {
        // B∆∞·ªõc 3: ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u
        $newPassword = $_POST['new_password'];
        $confirmPassword = $_POST['confirm_password'];

        if (empty($newPassword) || empty($confirmPassword)) {
            $message = 'Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin';
            $messageType = 'danger';
            $step = 3;
        } elseif ($newPassword !== $confirmPassword) {
            $message = 'M·∫≠t kh·∫©u x√°c nh·∫≠n kh√¥ng kh·ªõp';
            $messageType = 'danger';
            $step = 3;
        } elseif (strlen($newPassword) < 6) {
            $message = 'M·∫≠t kh·∫©u ph·∫£i c√≥ √≠t nh·∫•t 6 k√Ω t·ª±';
            $messageType = 'danger';
            $step = 3;
        } elseif (!isset($_SESSION['reset_user_id']) || !isset($_SESSION['reset_email'])) {
            $message = 'Phi√™n l√†m vi·ªác ƒë√£ h·∫øt h·∫°n. Vui l√≤ng th·ª≠ l·∫°i.';
            $messageType = 'danger';
            $step = 1;
        } else {
            // C·∫≠p nh·∫≠t m·∫≠t kh·∫©u
            $userId = $_SESSION['reset_user_id'];
            $user = $database->getUserById($userId);

            if ($user) {
                $result = $database->updateUserPassword($userId, $newPassword, $user->username);

                if ($result) {
                    $message = 'ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u th√†nh c√¥ng! ƒêang chuy·ªÉn h∆∞·ªõng ƒë·∫øn trang ƒëƒÉng nh·∫≠p...';
                    $messageType = 'success';

                    // X√≥a session
                    unset($_SESSION['reset_otp'], $_SESSION['reset_email'], $_SESSION['reset_user_id'], $_SESSION['otp_expires']);

                    // Chuy·ªÉn h∆∞·ªõng sau 3 gi√¢y
                    echo "<meta http-equiv='refresh' content='3;url=login.php'>";
                } else {
                    $message = 'C√≥ l·ªói x·∫£y ra khi ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u. Vui l√≤ng th·ª≠ l·∫°i.';
                    $messageType = 'danger';
                    $step = 3;
                }
            } else {
                $message = 'Kh√¥ng t√¨m th·∫•y th√¥ng tin ng∆∞·ªùi d√πng';
                $messageType = 'danger';
                $step = 1;
            }
        }
    }
}

// X·ª≠ l√Ω y√™u c·∫ßu g·ª≠i l·∫°i OTP
if (isset($_GET['resend_otp']) && isset($_SESSION['reset_email'])) {
    $email = $_SESSION['reset_email'];
    $user = $database->getUserByUsernameOrEmail($email);

    if ($user) {
        $otp = sprintf('%05d', mt_rand(0, 99999));
        $_SESSION['reset_otp'] = $otp;
        $_SESSION['otp_expires'] = time() + 300;

        if (sendOTPEmail($email, $otp, true)) {
            $message = 'M√£ OTP m·ªõi ƒë√£ ƒë∆∞·ª£c g·ª≠i ƒë·∫øn email c·ªßa b·∫°n';
            $messageType = 'success';
        } else {
            $message = 'Kh√¥ng th·ªÉ g·ª≠i email. Vui l√≤ng th·ª≠ l·∫°i sau.';
            $messageType = 'danger';
        }
        $step = 2;
    }
}
?>

<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Qu√™n M·∫≠t Kh·∫©u - BookStore</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        body {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .forgot-container {
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px 0;
        }

        .forgot-card {
            background: white;
            border-radius: 20px;
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            max-width: 450px;
            width: 100%;
        }

        .forgot-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 2rem;
            text-align: center;
        }

        .forgot-body {
            padding: 2rem;
        }

        .step-indicator {
            display: flex;
            justify-content: center;
            margin-bottom: 2rem;
        }

        .step {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: #e9ecef;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 10px;
            font-weight: bold;
            position: relative;
        }

        .step.active {
            background: #007bff;
            color: white;
        }

        .step.completed {
            background: #28a745;
            color: white;
        }

        .step::after {
            content: '';
            position: absolute;
            top: 50%;
            left: 100%;
            width: 20px;
            height: 2px;
            background: #e9ecef;
            margin-left: 10px;
        }

        .step:last-child::after {
            display: none;
        }

        .step.completed::after {
            background: #28a745;
        }

        .form-control {
            border-radius: 10px;
            border: 2px solid #e9ecef;
            padding: 12px 16px;
            font-size: 16px;
            transition: all 0.3s ease;
        }

        .form-control:focus {
            border-color: #007bff;
            box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
        }

        .btn-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border: none;
            border-radius: 10px;
            padding: 12px 30px;
            font-weight: 600;
            transition: all 0.3s ease;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }

        .otp-input {
            text-align: center;
            font-size: 24px;
            font-weight: bold;
            letter-spacing: 0.5em;
        }

        .countdown {
            font-size: 14px;
            color: #6c757d;
        }

        .resend-link {
            color: #007bff;
            text-decoration: none;
            cursor: pointer;
        }

        .resend-link:hover {
            text-decoration: underline;
        }

        .password-strength {
            font-size: 12px;
            margin-top: 5px;
        }

        .strength-weak {
            color: #dc3545;
        }

        .strength-medium {
            color: #ffc107;
        }

        .strength-strong {
            color: #28a745;
        }

        .email-info {
            background: #e3f2fd;
            border-left: 4px solid #2196f3;
            padding: 15px;
            margin: 15px 0;
            border-radius: 5px;
        }
    </style>
</head>

<body>
    <div class="forgot-container">
        <div class="forgot-card">
            <div class="forgot-header">
                <h3 class="mb-0">
                    <i class="fas fa-key me-2"></i>
                    Qu√™n M·∫≠t Kh·∫©u
                </h3>
                <p class="mb-0 mt-2 opacity-75">ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u c·ªßa b·∫°n</p>
            </div>

            <div class="forgot-body">
                <!-- Step Indicator -->
                <div class="step-indicator">
                    <div class="step <?php echo $step >= 1 ? ($step > 1 ? 'completed' : 'active') : ''; ?>">1</div>
                    <div class="step <?php echo $step >= 2 ? ($step > 2 ? 'completed' : 'active') : ''; ?>">2</div>
                    <div class="step <?php echo $step == 3 ? 'active' : ''; ?>">3</div>
                </div>

                <!-- Alert Messages -->
                <?php if (!empty($message)): ?>
                    <div class="alert alert-<?php echo $messageType; ?> alert-dismissible fade show" role="alert">
                        <i
                            class="fas fa-<?php echo $messageType == 'success' ? 'check-circle' : 'exclamation-triangle'; ?> me-2"></i>
                        <?php echo $message; ?>
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                <?php endif; ?>

                <?php if ($step == 1): ?>
                    <!-- Step 1: Nh·∫≠p Email -->
                    <div class="text-center mb-4">
                        <h5>Nh·∫≠p ƒë·ªãa ch·ªâ email c·ªßa b·∫°n</h5>
                        <p class="text-muted small">Ch√∫ng t√¥i s·∫Ω g·ª≠i m√£ OTP ƒë·∫øn email n√†y qua h·ªá th·ªëng SMTP</p>
                    </div>

                    <div class="email-info">
                        <div class="d-flex align-items-center">
                            <i class="fas fa-info-circle text-primary me-2"></i>
                            <small>
                                <strong>L∆∞u √Ω:</strong> Email s·∫Ω ƒë∆∞·ª£c g·ª≠i t·ª´ h·ªá th·ªëng SMTP Gmail.
                                Vui l√≤ng ki·ªÉm tra c·∫£ h·ªôp th∆∞ r√°c n·∫øu kh√¥ng th·∫•y email.
                            </small>
                        </div>
                    </div>

                    <form method="POST">
                        <div class="mb-3">
                            <label for="email" class="form-label">
                                <i class="fas fa-envelope me-1"></i>
                                ƒê·ªãa ch·ªâ Email
                            </label>
                            <input type="email" class="form-control" id="email" name="email"
                                placeholder="Nh·∫≠p email ƒë√£ ƒëƒÉng k√Ω" required>
                        </div>

                        <div class="d-grid mb-3">
                            <button type="submit" name="send_otp" class="btn btn-primary">
                                <i class="fas fa-paper-plane me-2"></i>
                                G·ª≠i m√£ OTP
                            </button>
                        </div>
                    </form>

                <?php elseif ($step == 2): ?>
                    <!-- Step 2: Nh·∫≠p OTP -->
                    <div class="text-center mb-4">
                        <h5>Nh·∫≠p m√£ OTP</h5>
                        <p class="text-muted small">
                            <i class="fas fa-envelope me-1"></i>
                            M√£ OTP ƒë√£ ƒë∆∞·ª£c g·ª≠i ƒë·∫øn:
                            <strong><?php echo isset($_SESSION['reset_email']) ? $_SESSION['reset_email'] : ''; ?></strong>
                        </p>
                    </div>

                    <div class="email-info">
                        <div class="d-flex align-items-start">
                            <i class="fas fa-lightbulb text-warning me-2 mt-1"></i>
                            <small>
                                <strong>M·∫πo:</strong> N·∫øu kh√¥ng th·∫•y email trong h·ªôp th∆∞ ch√≠nh,
                                h√£y ki·ªÉm tra th∆∞ m·ª•c "Spam" ho·∫∑c "Th∆∞ r√°c".
                                Email ƒë∆∞·ª£c g·ª≠i t·ª´ bookstore.sp1@gmail.com.
                            </small>
                        </div>
                    </div>

                    <form method="POST">
                        <div class="mb-3">
                            <label for="otp" class="form-label">
                                <i class="fas fa-shield-alt me-1"></i>
                                M√£ OTP (5 s·ªë)
                            </label>
                            <input type="text" class="form-control otp-input" id="otp" name="otp" placeholder="00000"
                                maxlength="5" pattern="[0-9]{5}" required>
                        </div>

                        <div class="text-center mb-3">
                            <div class="countdown" id="countdown"></div>
                            <div id="resend-section" style="display: none;">
                                <span class="text-muted">Kh√¥ng nh·∫≠n ƒë∆∞·ª£c m√£? </span>
                                <a href="?resend_otp=1" class="resend-link">
                                    <i class="fas fa-redo me-1"></i>
                                    G·ª≠i l·∫°i
                                </a>
                            </div>
                        </div>

                        <div class="d-grid mb-3">
                            <button type="submit" name="verify_otp" class="btn btn-primary">
                                <i class="fas fa-check me-2"></i>
                                X√°c th·ª±c OTP
                            </button>
                        </div>
                    </form>

                <?php elseif ($step == 3): ?>
                    <!-- Step 3: ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u -->
                    <div class="text-center mb-4">
                        <h5>ƒê·∫∑t m·∫≠t kh·∫©u m·ªõi</h5>
                        <p class="text-muted small">T·∫°o m·∫≠t kh·∫©u m·∫°nh ƒë·ªÉ b·∫£o v·ªá t√†i kho·∫£n</p>
                    </div>

                    <form method="POST">
                        <div class="mb-3">
                            <label for="new_password" class="form-label">
                                <i class="fas fa-lock me-1"></i>
                                M·∫≠t kh·∫©u m·ªõi
                            </label>
                            <div class="position-relative">
                                <input type="password" class="form-control" id="new_password" name="new_password"
                                    placeholder="Nh·∫≠p m·∫≠t kh·∫©u m·ªõi" required minlength="6">
                                <button type="button" class="btn btn-outline-secondary position-absolute top-0 end-0"
                                    style="border-top-left-radius: 0; border-bottom-left-radius: 0;"
                                    onclick="togglePassword('new_password', this)">
                                    <i class="fas fa-eye"></i>
                                </button>
                            </div>
                            <div id="password-strength" class="password-strength"></div>
                        </div>

                        <div class="mb-3">
                            <label for="confirm_password" class="form-label">
                                <i class="fas fa-lock me-1"></i>
                                X√°c nh·∫≠n m·∫≠t kh·∫©u
                            </label>
                            <div class="position-relative">
                                <input type="password" class="form-control" id="confirm_password" name="confirm_password"
                                    placeholder="Nh·∫≠p l·∫°i m·∫≠t kh·∫©u" required>
                                <button type="button" class="btn btn-outline-secondary position-absolute top-0 end-0"
                                    style="border-top-left-radius: 0; border-bottom-left-radius: 0;"
                                    onclick="togglePassword('confirm_password', this)">
                                    <i class="fas fa-eye"></i>
                                </button>
                            </div>
                            <div id="password-match" class="password-strength"></div>
                        </div>

                        <div class="d-grid mb-3">
                            <button type="submit" name="reset_password" class="btn btn-primary">
                                <i class="fas fa-key me-2"></i>
                                ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u
                            </button>
                        </div>
                    </form>
                <?php endif; ?>

                <!-- Back to Login -->
                <div class="text-center">
                    <a href="login.php" class="text-decoration-none">
                        <i class="fas fa-arrow-left me-1"></i>
                        Quay l·∫°i ƒëƒÉng nh·∫≠p
                    </a>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Countdown timer for OTP
        <?php if ($step == 2 && isset($_SESSION['otp_expires'])): ?>
            let expiryTime = <?php echo $_SESSION['otp_expires']; ?>;

            function updateCountdown() {
                let now = Math.floor(Date.now() / 1000);
                let remaining = expiryTime - now;

                if (remaining <= 0) {
                    document.getElementById('countdown').style.display = 'none';
                    document.getElementById('resend-section').style.display = 'block';
                    return;
                }

                let minutes = Math.floor(remaining / 60);
                let seconds = remaining % 60;

                document.getElementById('countdown').innerHTML =
                    `<i class="fas fa-clock me-1"></i>M√£ s·∫Ω h·∫øt h·∫°n sau: <strong>${minutes}:${seconds.toString().padStart(2, '0')}</strong>`;
            }

            updateCountdown();
            setInterval(updateCountdown, 1000);
        <?php endif; ?>

        // OTP input formatting
        document.addEventListener('DOMContentLoaded', function () {
            const otpInput = document.getElementById('otp');
            if (otpInput) {
                otpInput.addEventListener('input', function (e) {
                    this.value = this.value.replace(/[^0-9]/g, '');
                });

                otpInput.addEventListener('paste', function (e) {
                    e.preventDefault();
                    let paste = (e.clipboardData || window.clipboardData).getData('text');
                    paste = paste.replace(/[^0-9]/g, '').substring(0, 5);
                    this.value = paste;
                });
            }
        });

        // Password strength checker
        function checkPasswordStrength(password) {
            let strength = 0;
            let feedback = [];

            if (password.length >= 8) strength += 1;
            else feedback.push('√çt nh·∫•t 8 k√Ω t·ª±');

            if (/[a-z]/.test(password)) strength += 1;
            else feedback.push('Ch·ªØ th∆∞·ªùng');

            if (/[A-Z]/.test(password)) strength += 1;
            else feedback.push('Ch·ªØ hoa');

            if (/[0-9]/.test(password)) strength += 1;
            else feedback.push('S·ªë');

            if (/[^A-Za-z0-9]/.test(password)) strength += 1;
            else feedback.push('K√Ω t·ª± ƒë·∫∑c bi·ªát');

            return { strength, feedback };
        }

        document.addEventListener('DOMContentLoaded', function () {
            const newPasswordInput = document.getElementById('new_password');
            const confirmPasswordInput = document.getElementById('confirm_password');
            const strengthDiv = document.getElementById('password-strength');
            const matchDiv = document.getElementById('password-match');

            if (newPasswordInput) {
                newPasswordInput.addEventListener('input', function () {
                    const result = checkPasswordStrength(this.value);
                    let className, text;

                    if (result.strength <= 2) {
                        className = 'strength-weak';
                        text = 'Y·∫øu: ' + result.feedback.join(', ');
                    } else if (result.strength <= 3) {
                        className = 'strength-medium';
                        text = 'Trung b√¨nh: ' + result.feedback.join(', ');
                    } else {
                        className = 'strength-strong';
                        text = 'M·∫°nh';
                    }

                    strengthDiv.className = 'password-strength ' + className;
                    strengthDiv.textContent = text;
                });
            }

            if (confirmPasswordInput) {
                confirmPasswordInput.addEventListener('input', function () {
                    if (this.value === '') {
                        matchDiv.textContent = '';
                        return;
                    }

                    if (this.value === newPasswordInput.value) {
                        matchDiv.className = 'password-strength strength-strong';
                        matchDiv.textContent = '‚úì M·∫≠t kh·∫©u kh·ªõp';
                    } else {
                        matchDiv.className = 'password-strength strength-weak';
                        matchDiv.textContent = '‚úó M·∫≠t kh·∫©u kh√¥ng kh·ªõp';
                    }
                });
            }
        });

        // Toggle password visibility
        function togglePassword(inputId, button) {
            const input = document.getElementById(inputId);
            const icon = button.querySelector('i');

            if (input.type === 'password') {
                input.type = 'text';
                icon.className = 'fas fa-eye-slash';
            } else {
                input.type = 'password';
                icon.className = 'fas fa-eye';
            }
        }
    </script>
</body>

</html>